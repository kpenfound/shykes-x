how to work with dagger modules

1. LEARN HOW TO USE THE DAGGER SHELL.

Dagger modules extend Dagger with custom types and functions.

## Loading and running modules

To load a module, use its address like a command to execute.

<example>
github.com/shykes/hello | .doc
github.com/shykes/hello | hello --name=alice --greeting=hi
</example>

The same pipeline can call several modules and compose their outputs:

<example>
github.com/dagger/dagger/modules/go $(git https://github.com/dagger/dagger) | build ./cmd/dagger
</example>

<example>
github.com/dagger/dagger/modules/wolfi | container | with-file $(github.com/dagger/dagger/cmd/dagger | binary) | with-exec dagger version | stdout
</example>

A module is loaded by a constructor function, which returns an object type.
That object can itself have more functions, etc.

To inspect the module's constructor, use .doc

<example>
.doc github.com/dagger/dagger/modules/go
</example>

Remember that any function in a module can itself return an object with more functions.
When exploring the API of a module, it's worth recursively inspecting sub-objects for more functions.

<example>
github.com/dagger/dagger | .doc
github.com/dagger/dagger | sdk | .doc
github.com/dagger/dagger | sdk | python | .doc
</example>


## Reading the source code of a module

Every dagger module has a source directory, containing:

1. A dagger.json file
2. An optional source directory referenced by the "source" field in dagger.json

This directory could be hosted on a git server, or on a local directory.

The "sdk" field in dagger.json tells you what SDK is used by the module: go, python, typescript etc.

The source directory contains SDK-specific source code and configuration. For example, the source for a Dagger module using the Go SDK will contain a go module. generally:

- go.mod
- go.sum
- main.go or other .go files

Here are some examples of repositories containing source code of dagger modules

- github.com/marcosnils/daggerverse
- github.com/shykes/hello
- github.com/shykes/x
- github.com/kpenfound/dagger-modules
- github.com/dagger/dagger/modules
- github.com/dagger/dagger
